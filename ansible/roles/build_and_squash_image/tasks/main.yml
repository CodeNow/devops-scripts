---
- name: display service name
  debug:
    var: service_name_file

- name: load variables
  include_vars: "group_vars/alpha-{{ service_name_file }}.yml"

- name: display service name
  debug:
    var: service_name

- name: display repo
  debug:
    var: repo

- name: set variables for image
  set_fact:
    container_image: "registry.runnable.com/runnable/{{ service_name }}"
    container_tag: "{{ git_branch }}"

- name: build the image
  include_role:
    name: builder
  vars:
    name: "{{ service_name }}"
    skip_docker_setup: true

- name: get image id for newly created image
  become: true
  shell: docker images -a | grep "{{ container_image  }}" --color=never | awk '{print $3}'
  register: unsquahed_image_id

- name: squash newly created image
  become: true
  ignore_errors: true # Might already be squashed
  shell: docker-squash "{{ unsquahed_image_id.stdout }}" -t "{{ container_image }}:{{ container_tag }}"

- name: add additional tags
  become: true
  shell: docker tag "{{ container_image }}:{{ container_tag }}" "registry.runnable.com/runnable/{{ tag_name_item }}:{{ container_tag }}"
  when: additional_tags is defined
  with_items: "{{ additional_tags }}"
  loop_control:
    loop_var: tag_name_item

- name: remove all dangling images
  become: true
  ignore_errors: true
  shell: docker rmi $(docker images --quiet --filter "dangling=true")
