---
# remove any stopped containers
- name: look for stopped containers
  shell: sudo docker ps -a | grep Exited | awk '{print $1}'
  register: stopped_containers
  changed_when: stopped_containers.stdout != ''

- name: removed stopped containers
  when: stopped_containers.changed
  shell: sudo docker rm {{item}}
  with_items: stopped_containers.stdout_lines

# get current running container with this image
- name: look for running containers running {{container_image}}
  shell: sudo docker ps | grep {{container_image}} | awk '{print $1}'
  register: old_containers_id
  changed_when: old_containers_id.stdout != ''

# get latest image
# tag will default to latest
- name: pull down docker image {{container_image}}:{{container_tag}}
  command: sudo docker pull {{container_image}}:{{container_tag}}

# get id of new image
- name: get id of the docker image
  shell: sudo docker images --no-trunc | grep {{container_image}}.*{{container_tag}} | awk '{print $3}'
  register: new_image_id

# stop the old containers that were running this previously
- name: stop old containers
  when: old_containers_id.changed
  command: sudo docker stop -t {{stop_time}} {{item}}
  with_items: old_containers_id.stdout_lines

# remove the old containers that were running previously
- name: remove old containers
  when: old_containers_id.changed
  command: sudo docker rm {{item}}
  with_items: old_containers_id.stdout_lines

# start our new container with options and args
- name: start container
  command: sudo docker run --restart=always  --log-driver=syslog {{container_run_opts}} {{container_image}}:{{container_tag}} {{container_run_args}}
