#!/bin/bash

{% set has_token = ( ec2_describe_aws_access_key is defined and
        ec2_describe_aws_secret_key is defined and
        dock_registry_s3_access_key is defined and
        dock_registry_s3_secret_key is defined ) %}

{% if not has_token %}
export VAULT_TOKEN={{ vault_auth_token }}
export USER_VAULT_TOKEN={{ dock_vault_user_creation_access_token }}
{% endif %}

# Add Certs (Used for genereting Docker client keys + certs)
export DOCKER_CERT_CA_BASE64={{ ca_pem_base64['stdout'] }}
export DOCKER_CERT_CA_KEY_BASE64={{ ca_key_pem_base64['stdout'] }} | base64 --decode > /etc/ssl/docker/ca-key.pem
export DOCKER_CERT_PASS={{ pass_base64['stdout'] }} | base64 --decode > /etc/ssl/docker/pass

service krain start

CONSUL_HOSTNAME={{ consul_host_address }}
CONSUL_PORT={{ consul_api_port }}
VAULT_PORT={{ vault_port }}
USER_VAULT_HOSTNAME={{ user_vault_load_balancer }}
USER_VAULT_PORT={{ user_vault_port }}

{% if has_token %}
S3_ACCESS_KEY={{ dock_registry_s3_access_key }}
S3_SECRET_KEY={{ dock_registry_s3_secret_key }}
AWS_ACCESS_KEY={{ ec2_describe_aws_access_key }}
AWS_SECRET_KEY={{ ec2_describe_aws_secret_key }}
{% endif %}
bash /opt/runnable/dock-init/init.sh | tee /var/log/user-script-dock-init.log

// TODO: fix me
export CONSUL_HOSTNAME=
export VAULT_HOSTNAME=
export CONSUL_PORT=8500
export VAULT_PORT=8200
export USER_VAULT_HOSTNAME=
export USER_VAULT_PORT=8200
export K8_TOKEN=
export K8_HOST=
sudo docker run
  --rm \
  -v /var/run/systemd:/var/run/systemd \
  --uts=host \
  --privileged \
  --cap-add SYS_ADMIN \
  -v /opt/runnable/dock-init:/opt/runnable/dock-init \
  -v /etc/sysconfig/docker:/etc/sysconfig/docker \
  -v /var/log:/var/log \
  -v /etc/ssl/docker:/etc/ssl/docker \
  -v /var/run/docker.sock:/var/run/docker.sock \
  quay.io/runnable/dock-init:SAN-6341-kubernetes

# Set Vault Tokens (Used for fetching templates)

