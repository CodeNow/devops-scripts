#!/bin/bash

# Set ENV files
export CONSUL_PORT={{ consul_https_port }}
export CONSUL_HOSTNAME={{ groups['consul'][0] }}
export VAULT_PORT={{ vault_port }}

# Create directory for env
mkdir -p /opt/runnable/dock-init/consul-resources/vault/{{ node_env }}
chown ubuntu:ubuntu /opt/runnable/dock-init/consul-resources/vault/{{ node_env }}
chmod 0711 /opt/runnable/dock-init/consul-resources/vault/{{ node_env }}

# Set Vault Tokens
{% for item in tokens %}
echo {{ item.value }} > /opt/runnable/dock-init/consul-resources/vault/{{ node_env }}/{{ item.file_name }}
{% endfor %}

# Add upstart files
mkdir -p /docker/app-logs/
echo {{ krain_base64['stdout'] }} | base64 --decode > /etc/init/krain.conf
echo {{ charon_base64['stdout'] }} | base64 --decode > /etc/init/charon.conf

# Add Certs
mkdir -p /etc/ssl/docker/
rm /etc/ssl/docker/*
echo {{ ca_pem_base64['stdout'] }} | base64 --decode > /etc/ssl/docker/ca.pem
echo {{ ca_key_pem_base64['stdout'] }} | base64 --decode > /etc/ssl/docker/ca-key.pem
echo {{ pass_base64['stdout'] }} | base64 --decode > /etc/ssl/docker/pass

# Start services
{% if is_dock_pool %}
start amazon-ssm-agent
{% endif %}
service krain start
service charon start
{% if not is_dock_pool %}
CONSUL_HOSTNAME={{ groups['consul'][0] }} CONSUL_PORT={{ consul_https_port }} VAULT_PORT={{ vault_port }} bash /opt/runnable/dock-init/init.sh | tee /var/log/user-script-dock-init.log
{% endif %}
