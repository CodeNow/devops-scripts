#!/bin/bash

{% set has_token = ( ec2_describe_aws_access_key is defined and
        ec2_describe_aws_secret_key is defined and
        dock_registry_s3_access_key is defined and
        dock_registry_s3_secret_key is defined ) %}

{% if not has_token %}
# Create directory for env
mkdir -p /opt/runnable/dock-init/consul-resources/vault/{{ node_env }}
chown ubuntu:ubuntu /opt/runnable/dock-init/consul-resources/vault/{{ node_env }}
chmod 0711 /opt/runnable/dock-init/consul-resources/vault/{{ node_env }}

# Set Vault Tokens (Used for fetching templates)
{% for item in tokens %}
echo {{ item.value }} > /opt/runnable/dock-init/consul-resources/vault/{{ node_env }}/{{ item.file_name }}
{% endfor %}
{% endif %}

# Add upstart files for charon and krain
mkdir -p /docker/app-logs/
echo {{ krain_base64['stdout'] }} | base64 --decode > /etc/init/krain.conf
echo {{ charon_base64['stdout'] }} | base64 --decode > /etc/init/charon.conf

# Add Certs (Used for genereting Docker client keys + certs)
mkdir -p /etc/ssl/docker/
echo {{ ca_pem_base64['stdout'] }} | base64 --decode > /etc/ssl/docker/ca.pem
echo {{ ca_key_pem_base64['stdout'] }} | base64 --decode > /etc/ssl/docker/ca-key.pem
echo {{ pass_base64['stdout'] }} | base64 --decode > /etc/ssl/docker/pass
chmod -R 0440 /etc/ssl/docker/

# Start services
{% if is_dock_pool %}
start amazon-ssm-agent
{% endif %}
service krain start
service charon start
{% if not is_dock_pool %}
CONSUL_HOSTNAME={{ consul_host_address }} \
CONSUL_PORT={{ consul_api_port }} \
VAULT_PORT={{ vault_port }} \
{% if has_token %}
S3_ACCESS_KEY={{ dock_registry_s3_access_key }} \
S3_SECRET_KEY={{ dock_registry_s3_secret_key }} \
AWS_ACCESS_KEY={{ ec2_describe_aws_access_key }} \
AWS_SECRET_KEY={{ ec2_describe_aws_secret_key }} \
{% endif %}
bash /opt/runnable/dock-init/init.sh | tee /var/log/user-script-dock-init.log
{% endif %}
