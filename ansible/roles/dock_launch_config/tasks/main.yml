---
- name: load variables
  include_vars: "group_vars/alpha-krain.yml"

- name: create new config file for krain
  template:
    src=upstart.conf
    dest=~/{{ app_name }}.conf
    backup=yes
  vars:
    - app_name: "krain"
    - enviroment_vars: enviroment_vars

# this requires the use of gnu/coreutils base64 (`brew install coreutils`)
# Allows us to use same base64 locally and in host
- name: encode krain config to base64
  shell: cat ~/{{ app_name }}.conf | gbase64 -w 0
  register: krain_base64
  vars:
    - app_name: "krain"

- name: load variables
  include_vars: "group_vars/alpha-charon.yml"

- name: create new config file for charon
  template:
    src=upstart.conf
    dest=~/{{ app_name }}.conf
    backup=yes
  vars:
    - app_name: "charon"
    - enviroment_vars: enviroment_vars

# this requires the use of gnu/coreutils base64 (`brew install coreutils`)
# Allows us to use same base64 locally and in host
- name: encode charon config to base64
  shell: cat ~/{{ app_name }}.conf | gbase64 -w 0
  register: charon_base64
  vars:
    - app_name: "charon"

- name: register tokens
  set_fact:
    vault_tokens:
    - { file_name: 'auth-token', value: "{{ vault_auth_token }}" }
    - { file_name: 'token-01', value: "{{ vault_token_01 }}" }
    - { file_name: 'token-02', value: "{{ vault_token_02 }}" }
    - { file_name: 'token-03', value: "{{ vault_token_03 }}" }

- name: Get stats for CA
  stat:
    path: "./{{ certs_root }}/ca.pem"
  register: ca_stats

- name: Get stats for CA key
  stat:
    path: "./{{ certs_root }}/ca-key.pem"
  register: ca_key_stats

- name: Get stats for pass file
  stat:
    path: "./{{ certs_root }}/pass"
  register: pass_stats

- fail:
    msg: "Whoops! file ownership has changed"
  when: not ca_stats.stat.exists or not ca_key_stats.stat.exists or not pass_stats.stat.exists

- name: encode ca.pem to base64
  shell: "cat ./{{ certs_root }}/ca.pem | gbase64 -w 0"
  register: ca_pem_base64

- name: encode ca-key.pem to base64
  shell: "cat ./{{ certs_root }}/ca-key.pem | gbase64 -w 0"
  register: ca_key_pem_base64

- name: encode pass to base64
  shell: "cat ./{{ certs_root }}/pass | gbase64 -w 0"
  register: pass_base64

- name: Generate dock script
  template:
    src=init.tmpl
    dest="{{ environment_root }}/dock.sh"
  vars:
    tokens: "{{ vault_tokens }}"
    is_dock_pool: false

- name: Generate dock script
  template:
    src=init.tmpl
    dest="{{ environment_root }}/dock-pool.sh"
  vars:
    tokens: "{{ vault_tokens }}"
    is_dock_pool: true
