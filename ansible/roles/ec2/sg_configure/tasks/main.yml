#- name: install Python Boto
#  sudo: yes
#  apt: name=python-boto state=latest

- name: Bastion
  tags:
    - bastion
  ec2_group:
    name: "{{ env }}-bastion"
    description: "{{ env }} Bastion Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ bastion_sshd_port }}"
        to_port: "{{ bastion_sshd_port }}"
        cidr_ip: "{{ ip_all }}"

- name: API SG
  tags:
    - api
  ec2_group:
    name: "{{ env }}-api"
    description: "{{ env }} API Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_hipache }}"

- name: Consul Service SG
  tags:
    - consul
  ec2_group:
    name: "{{ env }}-consul"
    description: "{{ env }} Consul Service Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: "{{ consul_rpc_min_port }}"
        to_port: "{{ consul_rpc_max_port }}"
        group_id: "{{ sg_consul }}"
      - proto: tcp
        from_port: "{{ vault_api_port }}"
        to_port: "{{ vault_api_ssl_port }}"
        group_id: "{{ sg_consul }}"
      - proto: tcp
        from_port: "{{ vault_api_port }}"
        to_port: "{{ vault_api_ssl_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ consul_api_port }}"
        to_port: "{{ consul_api_ssl_port }}"
        group_id: "{{ sg_dock_services }}"
      - proto: tcp
        from_port: "{{ consul_api_port }}"
        to_port: "{{ consul_api_ssl_port }}"
        group_id: "{{ sg_dock }}"

- name: Runnable Container Services SG
  tags:
    - dock
  ec2_group:
    name: "{{ env }}-dock"
    description: "{{ env }} Dock Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: udp
        from_port: "{{ named_port }}"
        to_port: "{{ named_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ named_port }}"
        to_port: "{{ named_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ krain_port }}"
        to_port: "{{ krain_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ filibuster_port }}"
        to_port: "{{ filibuster_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ dock_filibuster_port }}"
        to_port: "{{ dock_filibuster_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ docker_port }}"
        to_port: "{{ docker_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ docker_port }}"
        to_port: "{{ docker_port }}"
        group_id: "{{ sg_dock_services }}"
      - proto: udp
        from_port: "{{ weave_port }}"
        to_port: "{{ weave_port }}"
        group_id: "{{ sg_api }}"
      - proto: udp
        from_port: "{{ weave_port }}"
        to_port: "{{ weave_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ weave_port }}"
        to_port: "{{ weave_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ weave_port }}"
        to_port: "{{ weave_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ vault_api_port }}"
        to_port: "{{ vault_api_ssl_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_navi }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_redis }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_app_services }}"

- name: Hipache SG
  tags:
    - hipache
  ec2_group:
    name: "{{ env }}-hipache"
    description: "{{ env }} Hipache Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: icmp
        from_port: -1
        to_port: -1
        cidr_ip: "{{ ip_all }}"
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        cidr_ip: "{{ ip_all }}"
      - proto: tcp
        from_port: "{{ https_port }}"
        to_port: "{{ https_port }}"
        cidr_ip: "{{ ip_all }}"
      - proto: tcp
        from_port: 3000
        to_port: 3000
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: 8301
        to_port: 8301
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: 8301
        to_port: 8301
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: 8301
        to_port: 8301
        group_id: "{{ sg_app_services }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_redis }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_app_services }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_web }}"

- name: MongoDB SG
  tags:
    - mongo
  ec2_group:
    name: "{{ env }}-mongo"
    description: "{{ env }} MongoDB Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: 27000
        to_port: 27020
        group_id: "{{ sg_mongo }}"
      - proto: tcp
        from_port: 27000
        to_port: 27020
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: 27000
        to_port: 27020
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: 27000
        to_port: 27020
        group_id: "{{ sg_app_services }}"

- name: Navi SG
  tags:
    - navi
  ec2_group:
    name: "{{ env }}-navi"
    description: "{{ env }} Navi Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: "{{ navi_port }}"
        to_port: "{{ navi_port }}"
        group_id: "{{ sg_hipache }}"

- name: Neo4J SG
  tags:
    - neo4j
  ec2_group:
    name: "{{ env }}-neo4j"
    description: "{{ env }} Neo4J Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: "{{ neo4j_port }}"
        to_port: "{{ neo4j_tls_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ neo4j_port }}"
        to_port: "{{ neo4j_tls_port }}"
        group_id: "{{ sg_app_services }}"

- name: RabbitMQ SG
  tags:
    - rabbit
  ec2_group:
    name: "{{ env }}-rabbit"
    description: "{{ env }} RabbitMQ Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: 54320
        to_port: 54321
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: 54320
        to_port: 54321
        group_id: "{{ sg_navi }}"
      - proto: tcp
        from_port: 54320
        to_port: 54321
        group_id: "{{ sg_app_services }}"
      - proto: tcp
        from_port: 54320
        to_port: 54321
        group_id: "{{ sg_dock_services }}"

- name: RDS SG
  tags:
    - rds
  ec2_group:
    name: "{{ env }}-rds"
    description: "{{ env }} RDS Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: 5432
        to_port: 5432
        group_id: "{{ sg_app_services }}"

- name: Redis SG
  tags:
    - redis
  ec2_group:
    name: "{{ env }}-redis"
    description: "{{ env }} Redis Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: "{{ redis_port }}"
        to_port: "{{ redis_tls_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ redis_port }}"
        to_port: "{{ redis_tls_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ redis_port }}"
        to_port: "{{ redis_tls_port }}"
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: "{{ redis_port }}"
        to_port: "{{ redis_tls_port }}"
        group_id: "{{ sg_navi }}"
      - proto: tcp
        from_port: "{{ redis_port }}"
        to_port: "{{ redis_tls_port }}"
        group_id: "{{ sg_app_services }}"
      - proto: tcp
        from_port: "{{ redis_port }}"
        to_port: "{{ redis_tls_port }}"
        group_id: "{{ sg_dock_services }}"
      - proto: tcp
        from_port: "{{ redis_port }}"
        to_port: "{{ redis_tls_port }}"
        group_id: "{{ sg_web }}"

- name: Registry SG
  tags:
    - registry
  ec2_group:
    name: "{{ env }}-registry"
    description: "{{ env }} Registry Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_app_services }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_consul }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_dock_services }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_mongo }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_navi }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_neo4j }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_rabbit }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_redis }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_userland }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_web }}"

- name: App Services SG
  tags:
    - app-services
  ec2_group:
    name: "{{ env }}-app-services"
    description: "{{ env }} Application Services Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_app_services }}"
      - proto: tcp
        from_port: "{{ https_port }}"
        to_port: "{{ https_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ https_port }}"
        to_port: "{{ https_port }}"
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: "{{ https_port }}"
        to_port: "{{ https_port }}"
        group_id: "{{ sg_app_services }}"
      - proto: tcp
        from_port: "{{ swarm_port }}"
        to_port: "{{ swarm_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ navi_port }}"
        to_port: "{{ navi_port }}"
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: "{{ detention_port }}"
        to_port: "{{ detention_port }}"
        group_id: "{{ sg_navi }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_hipache }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_app_services }}"

- name: Dock Services
  tags:
    - dock-services
  ec2_group:
    name: "{{ env }}-dock-services"
    description: "{{ env }} Dock Services Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ sshd_port }}"
        to_port: "{{ sshd_port }}"
        group_id: "{{ sg_bastion }}"
      - proto: udp
        from_port: "{{ named_port }}"
        to_port: "{{ named_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp 
        from_port: "{{ named_port }}"
        to_port: "{{ named_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp 
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp 
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp 
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_hipache }}"
      - proto: tcp 
        from_port: "{{ http_port }}"
        to_port: "{{ http_port }}"
        group_id: "{{ sg_dock_services }}"
      - proto: tcp 
        from_port: "{{ https_port }}"
        to_port: "{{ https_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp 
        from_port: "{{ https_port }}"
        to_port: "{{ https_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp 
        from_port: "{{ https_port }}"
        to_port: "{{ https_port }}"
        group_id: "{{ sg_hipache }}"
      - proto: tcp 
        from_port: "{{ https_port }}"
        to_port: "{{ https_port }}"
        group_id: "{{ sg_dock_services }}"
      - proto: tcp
        from_port: "{{ swarm_port }}"
        to_port: "{{ swarm_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_dock }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_dock_services }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_api }}"
      - proto: tcp
        from_port: "{{ container_min_port }}"
        to_port: "{{ container_max_port }}"
        group_id: "{{ sg_hipache }}"

- name: Userland Hipache
  tags:
    - userland
  ec2_group:
    name: "{{ env }}-userland"
    description: "{{ env }} Userland Hipache Security Policy"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    rules:
      - proto: tcp
        from_port: "{{ http_port }}"
        to_port: "{{ container_max_port }}"
        cidr_ip: "{{ ip_all }}"
