- name: Put khronos cron script in place
  become: yes
  tags: cron
  template:
    src: "khronos-cron.sh"
    mode: 0744
    dest: /opt/runnable/{{ item.script }}
  with_items:
  - { cron_queues: "{{ main_cron_queues }}", script: "main-cron.sh"}
  - { cron_queues: "{{ canary_cron_queues }}", script: "canary-cron.sh"}

- name: Put Khronos script into crontab
  become: yes
  tags: cron
  cron:
    name: "{{ item.name }}"
    job: /opt/runnable/{{ item.script }} >> /var/log/{{ item.script }}.log 2>&1
    minute: "{{ item.minute | default('*') }}"
    hour: "{{ item.hour | default('*') }}"
    state: "{{ item.state | default('present') }}"
  with_items:
  - name: Khronos CLI - Daily Cleanup
    minute: 13
    hour: 1,7,13,19
    script: main-cron.sh
  - name: Khronos CLI - Canary
    minute: "*/5"
    script: canary-cron.sh
    state: "{% if node_env == 'production-delta' %}present{% else %}absent{% endif %}"

- name: make directory for mongo certificates
  become: yes
  file:
    dest: /opt/ssl/mongo-client
    state: directory

- name: put client CA in place for mongo
  become: yes
  copy:
    dest: /opt/ssl/mongo-client/ca.pem
    content: "{{ new_client_certs.data.issuing_ca }}"
    mode: 0400

- name: put client certificate in place for mongo
  become: yes
  copy:
    dest: /opt/ssl/mongo-client/cert.pem
    content: "{{ new_client_certs.data.certificate }}"
    mode: 0400

- name: put client private key in place for mongo
  become: yes
  copy:
    dest: /opt/ssl/mongo-client/key.pem
    content: "{{ new_client_certs.data.private_key }}"
    mode: 0400
