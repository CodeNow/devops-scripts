---
- name: Install rsyslog-gnutls
  become: yes
  tags: loggly
  apt:
    pkg=rsyslog-gnutls
    state=latest
    update_cache=yes
    cache_valid_time=604800
    install_recommends=yes

- name: copy loggly TLS config
  tags: loggly
  become: true
  copy:
    src=20-loggly-tls.conf
    dest=/etc/rsyslog.d/20-loggly-tls.conf
    owner=syslog
    group=syslog

- name: create loggly TLS cert dir
  tags: loggly
  become: true
  file:
    path=/etc/rsyslog.d/keys/ca.d
    state=directory
    owner=syslog
    group=syslog

- name: copy loggly TLS certs
  tags: loggly
  become: true
  copy:
    src=logs-01.loggly.com_sha12.crt
    dest=/etc/rsyslog.d/keys/ca.d/logs-01.loggly.com_sha12.crt
    owner=syslog
    group=syslog
    mode=400

- name: copy loggly config
  tags: loggly
  become: true
  template:
    src=22-loggly.conf.j2
    dest=/etc/rsyslog.d/22-loggly.conf
    owner=syslog
    group=syslog

- name: create runnable bin directory
  tags: loggly
  become: true
  file:
    path=/opt/runnable/bin
    state=directory
    mode=0755
    owner=ubuntu
    group=ubuntu

- name: copy rotate util script
  tags: loggly
  become: true
  template:
    src=rotate-logs.sh.j2
    dest=/opt/runnable/bin/rotate-{{ name }}-logs.sh
    mode=0755

- name: copy app config
  tags: loggly
  become: true
  template:
    src=21-output-syslog.conf.j2
    dest=/etc/rsyslog.d/21-rotated-{{ name }}.conf
    owner=syslog
    group=syslog

- name: copy rsyslog config
  tags: loggly
  become: true
  template:
    src=rsyslog.conf.j2
    dest=/etc/rsyslog.conf
    owner=syslog
    group=syslog

- name: stop rsyslog
  tags: [loggly, deploy]
  become: true
  service: name=rsyslog state=stopped

- name: clear rsyslog state file
  tags: [loggly, deploy]
  become: true
  file:
    path=/var/spool/rsyslog/stat-{{ name }}
    state=absent

- name: touch the log file
  tags: [loggly, deploy]
  become: true
  file:
    path="{{ app_log_dir }}/{{ name }}-daemon.log"
    state=touch
    owner=syslog
    group=adm

- name: check for current log file
  tags: [loggly, deploy]
  stat: path="{{ app_log_dir }}/{{ name }}-daemon.log"
  register: log_file

- name: remove old log file
  when: log_file.stat.exists
  tags: [loggly, deploy]
  become: true
  file:
    path="{{ app_log_dir }}/{{ name }}-daemon.log"
    state=absent

- name: restart rsyslog
  tags: [loggly, deploy]
  become: true
  service: name=rsyslog state=restarted

- name: add loggly monitor
  tags: cron
  cron:
    name="loggly monitor"
    minute="*/2"
    job="echo  'loggly monitoring' 2>&1 | /usr/bin/logger -t LogMonitor"
    state=present
