---
- set_fact:
    ca_data: "{{ lookup('file', '{{ user_content_domain }}/ca.pem') }}"
- set_fact:
    cert_data: "{{ lookup('file', '{{ user_content_domain }}/cert.pem') }}"
- set_fact:
    key_data: "{{ lookup('file', '{{ user_content_domain }}/key.pem') }}"
- set_fact:
    chained_data: "{{ lookup('file', '{{ user_content_domain }}/chained.pem') }}"
- set_fact:
    dhparam_data: "{{ lookup('file', '{{ user_content_domain }}/dhparam.pem') }}"

- name: create cert config map
  tags: [ configure_proxy, configure_files ]
  template:
    src: certs.yml
    dest: "{{ config_maps_path }}/{{ name }}-certs"

- name: create proxy template
  tags: [ configure_proxy, configure_files ]
  template:
    src: proxy-nginx.conf
    dest: "{{ config_maps_path }}/{{ name }}-base-config"

- name: create api template
  tags: [ configure_proxy, configure_files ]
  template:
    src: navi.tmpl
    dest: "{{ config_maps_path }}/{{ name }}-navi-config"

#  TODO: make this a new role and a new deployment
# - name: setup ip table rule to redir all to port 80
#   tags: [ configure_proxy, iptables ]
#   become: yes
#   iptables:
#     table=nat
#     chain=PREROUTING
#     in_interface=eth0
#     protocol=tcp
#     destination_port={{ item }}
#     jump=REDIRECT
#     to_ports=80
#     comment="Redirect {{ item }} traffic to port 80"
#   with_items:
#   - 81:442
#   - 444:65535
