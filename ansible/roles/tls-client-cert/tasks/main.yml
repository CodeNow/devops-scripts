---
- name: check for role for client
  local_action:
    command vault read --format=json {{ node_env }}/roles/{{ tls_service }}-client
  ignore_errors: True
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_root_token }}"
  register: raw_role
  changed_when: raw_role.rc != 0

- name: create role for client
  when: raw_role.rc != 0
  local_action:
    command vault write --format=json {{ node_env }}/roles/{{ tls_service }}-client allow_any_name=true ttl=87600h
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_root_token }}"

- name: create certificate for client
  when: save_on_certs is undefined
  local_action:
    command vault write --format=json {{ node_env }}/issue/{{ tls_service }}-client common_name="{{ name }}.client.{{ tls_service }}.runnable" ttl=8760h
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_root_token }}"
  register: raw_new_certs

- when: raw_new_certs is defined and save_on_certs is undefined
  set_fact:
    new_client_certs: "{{ raw_new_certs.stdout | from_json }}"

- when: save_on_certs is defined
  set_fact:
    new_client_certs:
      data:
        certificate: fake certificate
        issuing_ca: fake CA
        private_key: fake private key
