---
# these are pretty hacky, but it should work
# Get port information from the hosted service
- name: get eru ports
  when: "{{ name }} == eru"
  tags: [ configure_proxy, deploy ]
  become: true
  shell: |
    for c in $(docker ps | awk '/eru/{ print $1 }'); do
      docker port $c 5501 | cut -d ':' -f 2
      docker port $c 5502 | cut -d ':' -f 2
    done
  args:
    executable: /bin/bash
  register: target_ports

- name: get socket server ports
  when: "{{ name }} == api-socket-server"
  tags: [ configure_proxy, deploy ]
  become: true
  shell: |
    for c in $(docker ps | awk '/api-socket-server/{ print $1 }'); do
      docker port $c 80 | cut -d ':' -f 2
    done
  args:
    executable: /bin/bash
  register: target_ports

# everything from this point on is deligated to the nginx host

- name: print target ports
  delegate_to: "{{ nginx_host }}"
  tags: [ configure_proxy, deploy ]
  debug:
    msg: ports -- {{ target_ports }}

- name: print target IP address
  delegate_to: "{{ nginx_host }}"
  tags: [ configure_proxy, deploy ]
  debug:
    msg: ip -- {{ target_ip_address }}

- name: assert nginx config directory
  delegate_to: "{{ nginx_host }}"
  tags: [ configure_proxy, deploy ]
  become: yes
  file:
    state: directory
    dest: /etc/nginx

- name: assert nginx sites-available directory
  delegate_to: "{{ nginx_host }}"
  tags: [ configure_proxy, deploy ]
  become: yes
  file:
    state: directory
    dest: /etc/nginx/sites-available

- name: assert nginx sites-enable directory
  delegate_to: "{{ nginx_host }}"
  tags: [ configure_proxy, deploy ]
  become: yes
  file:
    state: directory
    dest: /etc/nginx/sites-enable

- name: put configuration in place
  delegate_to: "{{ nginx_host }}"
  tags: [ configure_proxy, deploy ]
  become: yes
  template:
    src: "{{ item }}"
    dest: /etc/nginx/sites-available/{{ item }}
  with_items: "{{ templates }}"

- name: link configuration to enable
  delegate_to: "{{ nginx_host }}"
  tags: [ configure_proxy, deploy ]
  become: yes
  file:
    state: link
    dest: /etc/nginx/sites-enabled/{{ item }}
    src: /etc/nginx/sites-available/{{ item }}
  with_items: "{{ templates }}"

- name: reload nginx
  delegate_to: "{{ nginx_host }}"
  tags: [ configure_proxy, deploy ]
  become: yes
  shell: >
    docker ps |
    awk '/nginx/{ print $1 }' |
    xargs -n 1 docker kill --signal SIGHUP
  args:
    executable: /bin/bash
