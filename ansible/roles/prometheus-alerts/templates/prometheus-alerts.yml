global:
  # ResolveTimeout is the time after which an alert is declared resolved
  # if it has not been updated.
  resolve_timeout: 5m

  slack_api_url: "{{ ops_slack_channel_url }}"

  pagerduty_url: "https://events.pagerduty.com/generic/2010-04-15/create_event.json"

# The root node of the routing tree.
route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ["alertname", "org", "alertTo"]
  # When a new group of alerts is created by an incoming alert, wait at
  # least "group_wait" to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s
  # A default receiver
  receiver: slack_prom

  continue: true

  routes:
  - match_re:
      reportTo: .*slack.*
    receiver: slack

  - match_re:
      reportTo: .*pagerduty.*
    receiver: pagerduty

  - match_re:
      reportTo: .*drake.*
    receiver: drake

# A list of notification receivers.
receivers:
- name: "pagerduty"
  pagerduty_configs:
  - send_resolved: true
    service_key: "{{ pager_duty_key }}"

- name: "slack_prom"
  slack_configs:
  - send_resolved: true
    channel: prometheus

- name: "slack"
  slack_configs:
  - send_resolved: true
    channel: ops

- name: "drake"
  webhook_configs:
  - send_resolved: true
    url: "{{ drake_hostname }}/datadog"
