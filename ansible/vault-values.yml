---
- hosts: vault
  vars_files:
    - group_vars/alpha-vault.yml
  tasks:
    - name: put values into vault
      run_once: true
      when: write_values is defined
      uri:
        method=PUT
        url={{ vault_url }}/v1/{{ item.key }}
        HEADER_X-Vault-Token="{{ vault_auth_token }}"
        body_format=json
        body='{{ item.data | to_json }}'
        status_code=200,204
      with_items: "{{ vault_seed_values }}"

    - name: check for aws backend in vault
      run_once: true
      when: write_values is defined
      uri:
        method=GET
        url={{ vault_url }}/v1/sys/mounts
        HEADER_X-Vault-Token="{{ vault_auth_token }}"
        return_content=yes
      register: mounts

    - name: mount 1h aws backend in vault
      run_once: true
      when: write_values is defined and mounts.json['aws_1h/'] is not defined
      uri:
        method=POST
        follow_redirects=all
        url={{ vault_url }}/v1/sys/mounts/aws_1h
        HEADER_X-Vault-Token="{{ vault_auth_token }}"
        body_format=json
        body='{{ item | to_json }}'
        status_code=204
      with_items:
        - type: "aws"
          config:
            default_lease_ttl: "3600s" # 1 hour, in seconds
            max_lease_ttl: "3600s" # 1 hour, in seconds

    - name: mount 1yr aws backend in vault
      run_once: true
      when: write_values is defined and mounts.json['aws_1yr/'] is not defined
      uri:
        method=POST
        follow_redirects=all
        url={{ vault_url }}/v1/sys/mounts/aws_1yr
        HEADER_X-Vault-Token="{{ vault_auth_token }}"
        body_format=json
        body='{{ item | to_json }}'
        status_code=204
      with_items:
        - type: "aws"
          config:
            default_lease_ttl: "8760h" # 1 year, in hours
            max_lease_ttl: "8760h" # 1 year, in hours

    - name: configure 1h aws root credentials
      run_once: true
      when: (write_values is defined and write_root_creds is defined) or (write_values is defined and mounts.json['aws_1h/'] is not defined)
      uri:
        method=POST
        follow_redirects=all
        url={{ vault_url }}/v1/aws_1h/config/root
        HEADER_X-Vault-Token="{{ vault_auth_token }}"
        body_format=json
        body='{{ item | to_json }}'
        status_code=204
      register: creds
      with_items:
        - access_key: "{{ vault_aws_access_key_id }}"
          secret_key: "{{ vault_aws_secret_key }}"
          region: "{{ vault_aws_region }}"

    - name: configure 1yr aws root credentials
      run_once: true
      when: (write_values is defined and write_root_creds is defined) or (write_values is defined and mounts.json['aws_1yr/'] is not defined)
      uri:
        method=POST
        follow_redirects=all
        url={{ vault_url }}/v1/aws_1yr/config/root
        HEADER_X-Vault-Token="{{ vault_auth_token }}"
        body_format=json
        body='{{ item | to_json }}'
        status_code=204
      register: creds
      with_items:
        - access_key: "{{ vault_aws_access_key_id }}"
          secret_key: "{{ vault_aws_secret_key }}"
          region: "{{ vault_aws_region }}"

    - name: check for the dock-init role
      run_once: true
      when: write_values is defined
      uri:
        method=GET
        follow_redirects=all
        url={{ vault_url }}/v1/aws_1h/roles/dock-init
        HEADER_X-Vault-Token="{{ vault_auth_token }}"
        status_code=200,404
      register: role

    - name: write the dock-init role
      run_once: true
      when: write_values is defined and role.status == 404
      uri:
        method=POST
        follow_redirects=all
        url={{ vault_url }}/v1/aws_1h/roles/dock-init
        HEADER_X-Vault-Token="{{ vault_auth_token }}"
        body_format=json
        body='{{ item | to_json | replace("\\\\", "") }}'
        status_code=204
      register: creds
      with_items:
        - policy: "{{ vault_seed_policy }}"
