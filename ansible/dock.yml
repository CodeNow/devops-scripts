- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
  - group_vars/alpha-dock.yml
  tasks:
    - fail: msg="`ami_version` is not defined"
      when: ami_version is not defined

    - name: Launch instance
      ec2:
         key_name: "{{ dock_key_name }}"
         group_id:
          - "{{ dock_k8_security_group }}"
         instance_type: "{{ dock_instance_type }}"
         image: "{{ dock_image }}"
         region: "{{ dock_region }}"
         vpc_subnet_id: "{{ dock_vpc_subnet_id }}"
         aws_access_key: "{{ dock_aws_access_key }}"
         aws_secret_key: "{{ dock_aws_access_secret }}"
         volumes:
          - device_name: /dev/xvda
            volume_type: gp2
            volume_size: "{{ dock_root_disk_size_gb }}"
            delete_on_termination: true
         count: 1
         assign_public_ip: False
         state: present
         wait: true
      register: ec2

    - name: set instance id
      set_fact:
        instance_id: "{{ ec2.instance_ids[0] }}"

    - name: Add new instance to host group
      add_host:
        hostname: "{{ ec2.instances[0].private_ip }}"
        groupname: dock

    - name: wait for it
      delegate_to: "{{ dock_bastion }}"
      wait_for:
        port: 22
        host: "{{ ec2.instances[0].private_ip }}"
        state: started
        delay: 10

- name: Configure instance(s)
  hosts: dock
  vars_files:
  - group_vars/alpha-dock.yml
  roles:
  - role: install-ssm

- include: krain.yml git_branch="v0.3.1"

- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
  - group_vars/alpha-dock.yml
  tasks:
  - name: create dock image
    register: ami
    ec2_ami:
      aws_access_key: "{{ dock_aws_access_key }}"
      aws_secret_key: "{{ dock_aws_access_secret }}"
      region: "{{ dock_region }}"
      instance_id: "{{ instance_id }}"
      wait: yes
      name: dock-ami-build-{{ ami_version }}
      tags:
        role: "dock"

  - name: terminate instance
    ec2:
      region: "{{ dock_region }}"
      aws_access_key: "{{ dock_aws_access_key }}"
      aws_secret_key: "{{ dock_aws_access_secret }}"
      instance_ids: '{{ instance_id }}'
      state: 'absent'
