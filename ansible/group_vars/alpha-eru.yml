---
name: eru
app_name: "{{ name }}"
security_groups: "{{ sg_eru }}"

container_image: registry.runnable.com/runnable/{{ name }}
container_tag: "{{ git_branch }}"
repo: git@github.com:CodeNow/{{ name }}.git
hosted_ports: [ "80" ]
node_version: 4.5
npm_version: 3.8
has_shrinkwrap: true

dockerfile_pre_install_commands: [
   'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc'
]

dockerfile_post_install_commands:
- apt-get update && apt-get install -y supervisor
- npm run build

dockerfile_environment: |
  ENV NPM_TOKEN {{ npm_token }}
  ENV BIG_POPPA_HOST {{ big_poppa_host_address }}:{{ big_poppa_port }}
  ENV RABBITMQ_HOSTNAME {{ rabbit_host_address }}
  ENV RABBITMQ_PASSWORD {{ rabbit_password }}
  ENV RABBITMQ_PORT {{ rabbit_port }}
  ENV AWS_ACCESS_KEY {{ eru_aws_access_key_id }}
  ENV AWS_ENVIRONMENT {{ eru_aws_environment }}
  ENV AWS_SECRET_KEY {{ eru_aws_secret_access_key }}
  ENV BIG_POPPA_HOST {{ big_poppa_host_address }}:{{ big_poppa_port }}
  ENV CONSUL_HOST {{ consul_host_address }}:{{ consul_api_port }}
  ENV DOMAIN {{ eru_subdomain }}.{{ domain }}
  ENV GITHUB_CLIENT_ID {{ eru_github_id }}
  ENV GITHUB_CLIENT_SECRET {{ eru_github_secret }}
  ENV GITHUB_VARNISH_HOST {{ github_varnish_host }}
  ENV GITHUB_VARNISH_PORT {{ github_varnish_port }}
  ENV INTERCOM_API_KEY {{ eru_intercom_key }}
  ENV INTERCOM_APP_ID {{ eru_intercom_id }}
  ENV LOG_ENVIRONMENT {{ node_env }}
  ENV LOG_LEVEL trace
  ENV MONGODB_DATABASE {{ eru_mongodb_database }}
  ENV MONGODB_HOSTS {{ mongo_hosts }}
  ENV MONGODB_PASSWORD {{ eru_mongodb_password }}
  ENV MONGODB_REPLSET {{ eru_mongodb_replset }}
  ENV MONGODB_USERNAME {{ eru_mongodb_username }}
  ENV NODE_ENV production
  ENV RABBITMQ_HOSTNAME {{ rabbit_host_address }}
  ENV RABBITMQ_PASSWORD {{ rabbit_password }}
  ENV RABBITMQ_PORT {{ rabbit_port }}
  ENV RABBITMQ_USERNAME {{ rabbit_username }}
  ENV REDIS_HOSTNAME {{ redis_host_address }}
  ENV REDIS_PORT {{ redis_port }}
  ENV RUNNABLE_DOMAIN {{ domain }}
  ENV USER_CONTENT_DOMAIN {{ user_content_domain }}

container_run_opts: >
  -h {{ name }}
  -d
  -p {{ hosted_ports[0] }}:{{ hosted_ports[0] }}

container_run_args: bash -c "supervisord --configuration supervisord.conf && sleep 10 && tail -n 100 -qf /tmp/*std*.log /tmp/supervisord.log"
