container_tag: "{{ git_branch }}"

node_version: 4.2.2
npm_version: 4.0.3

repo: git@github.com:CodeNow/api.git
restart_policy: always
has_shrinkwrap: true

# for sendGrid
sendgrid_key: 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

dockerfile_enviroment: [
  "NPM_TOKEN {{ npm_token }}"
]
dockerfile_pre_install_commands: [
   'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc'
]

volume_mounts:
 - name: api-docker-ssl-certs
   path: /etc/ssl/docker

# shared ENV's between api services
api_base_container_envs:
  - name: AWS_ACCESS_KEY_ID
    value: "{{ api_aws_access_key_id }}"
  - name: AWS_SECRET_ACCESS_KEY
    value: "{{ api_aws_secret_access_key }}"
  - name: BIG_POPPA_HOST
    value: "http://{{ big_poppa_host_address }}:{{ big_poppa_port }}"
  - name: CLIO_HTTP_URL
    value: "http://{{ clio_host_address }}:{{ clio_port }}/"
  - name: COOKIE_DOMAIN
    value: "{{ domain }}"
  - name: CREAM_HOST
    value: "http://{{ cream_host_address }}:{{ cream_port }}"
  - name: DATADOG_HOST
    value: "{{ datadog_host_address }}"
  - name: DATADOG_PORT
    value: "{{ datadog_port }}"
  - name: DOCKER_BUILD_LINE_TIMEOUT_MS
    value: "3600000"
  - name: DOMAIN
    value: "{{ domain }}"
  - name: GITHUB_CALLBACK_URL
    value: "{{ api_url }}/auth/github/callback"
  - name: GITHUB_CLIENT_ID
    value: "{{ api_github_client_id }}"
  - name: GITHUB_CLIENT_SECRET
    value: "{{ api_github_client_secret }}"
  - name: GITHUB_DEPLOY_KEYS_BUCKET
    value: "{{ api_github_deploy_keys_bucket }}"
  - name: GITHUB_HOOK_URL
    value: "{{ api_url }}/actions/github"
  - name: GITHUB_WEBHOOK_URL
    value: "https://{{ drake_hostname }}/github"
  - name: GITHUB_VARNISH_HOST
    value: "{{ github_varnish_host }}"
  - name: GITHUB_VARNISH_PORT
    value: "{{ github_varnish_port }}"
  - name: GITHUB_PROTOCOL
    value: "http"
  - name: HELLO_RUNNABLE_GITHUB_TOKEN
    value: "{{ api_hello_runnable_github_token }}"
  - name: KRAIN_PORT
    value: "{{ krain_port }}"
  - name: MIXPANEL_APP_ID
    value: "{{ api_mixpanel_app_id }}"
  - name: MONGO_REPLSET_NAME
    value: "{{ api_mongo_replset_name }}"
  - name: MONGO
    value: "mongodb://{{ api_mongo_auth }}@{{ mongo_hosts }}/{{ api_mongo_database }}"
  - name: NAVI_HOST
    value: "http://{{ navi_host_address }}:{{ navi_http_port }}"
  - name: NODE_ENV
    value: "{{ node_env }}"
  - name: NUM_WORKERS
    value: "1"
  - name: OPTIMUS_HOST
    value: "http://{{ optimus_hostname }}"
  - name: RABBITMQ_HOSTNAME
    value: "{{ rabbit_host_address }}"
  - name: RABBITMQ_PASSWORD
    value: "{{ rabbit_password }}"
  - name: RABBITMQ_PORT
    value: "{{ rabbit_port }}"
  - name: RABBITMQ_USERNAME
    value: "{{ rabbit_username }}"
  - name: REDIS_IPADDRESS
    value: "{{ redis_host_address }}"
  - name: REDIS_PORT
    value: "{{ redis_port }}"
  - name: S3_CONTEXT_RESOURCE_BUCKET
    value: "{{ api_s3_context_bucket }}"
  - name: S3_LOG_BUCKET
    value: "{{ api_s3_log_bucket }}"
  - name: SENDGRID_KEY
    value: "{{ sendgrid_key }}"
  - name: SWARM_HOST
    value: "http://{{ swarm_host_address }}:{{ swarm_master_port }}"
  - name: USER_CONTENT_DOMAIN
    value: "{{ user_content_domain }}"
  - name: AWS_ALIAS_HOST
    value: "{{ api_aws_alias_host }}"
  - name: NEW_RELIC_APP_NAME
    value: "{{ api_new_relic_app_name | default('ansible_undefined') }}"
  - name: NEW_RELIC_LICENSE_KEY
    value: "{{ new_relic_license_key | default('ansible_undefined') }}"
  - name: NEW_RELIC_LOG_LEVEL
    value: "fatal"
  - name: NEW_RELIC_NO_CONFIG_FILE
    value: "true"
  - name: INTERCOM_APP_ID
    value: "{{ api_intercom_app_id | default('ansible_undefined') }}"
  - name: INTERCOM_API_KEY
    value: "{{ api_intercom_api_key | default('ansible_undefined') }}"
