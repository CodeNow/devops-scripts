name: khronos

container_image: registry.runnable.com/runnable/{{ name }}
container_tag: "{{ git_branch }}"
repo: "git@github.com:CodeNow/{{ name }}.git"
node_version: lts
npm_version: 2

# for cron job
# this is the list of queues we want to enqueue a job into
main_cron_queues: "\
  khronos:containers:orphan:prune \
  khronos:context-versions:prune-expired \
  khronos:images:prune \
  khronos:weave:prune"

canary_cron_queues: "\
  khronos:canary:build \
  khronos:canary:github-branch \
  khronos:canary:log \
  khronos:canary:network \
  khronos:metrics:container-status"

# a nice version of the rabbitmq host
cron_rabbit_host_address: "{{ rabbit_host_address }}:{{ rabbit_port }}"
# a quick version of authentication for rabbit for cron
cron_rabbit_auth: --username {{ rabbit_username }} --password {{ rabbit_password }}

# for container settings
container_envs: >
  -e API_SOCKET_SERVER=https://{{ api_socket_server_hostname }}
  -e API_URL={{ api_url }}
  -e CONSUL_HOST={{ consul_host_address }}:{{ consul_api_port }}
  -e CANARY_API_TOKEN={{ khronos_canary_token | default('undefined') }}
  -e CANARY_GITHUB_BRANCHES_INSTANCE_ID={{ khronos_canary_github_branches_instance_id | default('undefined') }}
  -e CANARY_LOG_INSTANCE_ID={{ khronos_canary_logs_instance_id | default('undefined') }}
  -e CANARY_LOG_TERMINAL_SLEEP=10
  -e CANARY_REBUILD_INSTANCE_ID={{ khronos_canary_rebuild_instance_id | default('undefined') }}
  -e CANARY_REBUILD_NAVI_URL={{ khronos_canary_rebuild_navi_url | default('undefined') }}
  -e DATADOG_HOST={{ datadog_host_address }}
  -e DATADOG_PORT={{ datadog_port }}
  -e INTERCOM_API_KEY={{ intercom_api_key | default('undefined') }}
  -e INTERCOM_APP_ID={{ intercom_app_id | default('undefined') }}
  -e KHRONOS_MAVIS=http://{{ mavis_hostname }}
  -e KHRONOS_MONGO=mongodb://{{ khronos_mongo_auth }}@{{ mongo_hosts }}/{{ khronos_mongo_database }}
  -e KHRONOS_PREFETCH=6
  -e LOG_LEVEL=error
  {% if node_env != "production-epsilon" %}
    -e MONGO_CACERT=/opt/ssl/mongo-client/ca.pem
    -e MONGO_CERT=/opt/ssl/mongo-client/cert.pem
    -e MONGO_KEY=/opt/ssl/mongo-client/key.pem
  {% endif %}
  -e NODE_ENV={{ node_env }}
  -e RABBITMQ_HOSTNAME={{ rabbit_host_address }}
  -e RABBITMQ_PASSWORD={{ rabbit_password }}
  -e RABBITMQ_PORT={{ rabbit_port }}
  -e RABBITMQ_USERNAME={{ rabbit_username }}
  -e SWARM_HOST=http://{{ swarm_host_address }}:{{ swarm_master_port }}
  -e WORKER_MAX_RETRY_DELAY=3600000

container_run_opts: >
  -h {{ name }}
  -d
  -v /opt/ssl/docker/{{ name }}:/etc/ssl/docker:ro
  -v /opt/ssl/mongo-client:/opt/ssl/mongo-client:ro
  --memory=1500m
  {{container_envs}}
